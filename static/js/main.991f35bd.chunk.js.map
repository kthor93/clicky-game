{"version":3,"sources":["components/Nav/index.js","components/Card/index.js","App.js","index.js"],"names":["Nav","props","react_default","a","createElement","href","alt","title","src","message","score","highScore","Card","className","value","id","onClick","handleClick","name","image","App","state","pokemon","currentScore","clicked","_this","indexOf","handleIncrement","setState","concat","handleReset","updatedScore","handleShuffle","shuffledPokemon","array","i","length","j","Math","floor","random","_ref","shufflePokemon","_this2","this","components_Nav","lib","fluid","xs","map","md","components_Card","key","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.991f35bd.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nconst Nav = props => (\n    <nav>\n        <ul>\n            <li>\n                <a href=\"/clicky-game/\"><img alt={props.title} src=\"https://fontmeme.com/permalink/190624/ba4b18cf1a08a781960ab760a85d8d88.png\" /></a>\n            </li>\n            <li>{props.message}</li>\n            <li>Current Score: {props.score}</li>\n            <li>High Score: {props.highScore}</li>\n        </ul>\n    </nav>\n);\n\nexport default Nav;","import React from \"react\";\nimport \"./style.css\";\n\nconst Card = props => (\n  <div \n    className=\"card\" \n    value={props.id} \n    onClick={() => props.handleClick(props.id)}\n  >\n    <div className=\"image-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default Card;","import React from 'react';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport Nav from \"./components/Nav\";\nimport Card from \"./components/Card\";\nimport pokemon from \"./pokemon.json\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    pokemon,\n    highScore: 0,\n    currentScore: 0,\n    message: \"\",\n    clicked: []\n  };\n\n  handleClick = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.handleIncrement();\n      this.setState({ clicked: this.state.clicked.concat(id) });\n    } else {\n      this.handleReset();\n    }\n  };\n\n  handleIncrement = () => {\n    const updatedScore = this.state.currentScore + 1;\n    this.setState({\n      currentScore: updatedScore,\n      message: \"\"\n    });\n\n    if (updatedScore >= this.state.highScore) {\n      this.setState({ highScore: updatedScore });\n    } else if (updatedScore === 12) {\n      this.setState({ message: \"You Win!\" });\n    }\n    this.handleShuffle();\n  };\n\n  handleReset = () => {\n    this.setState({\n      currentScore: 0,\n      highScore: this.state.highScore,\n      message: \"You lose!\",\n      clicked: []\n    });\n    this.handleShuffle();\n  };\n\n  handleShuffle = () => {\n    let shuffledPokemon = shufflePokemon(pokemon);\n    this.setState({ pokemon: shuffledPokemon });\n  };\n\n  render() {\n    return (\n      <div id=\"wrapper\">\n        <Nav\n          title=\"Pokemon Clicky Game\"\n          score={this.state.currentScore}\n          highScore={this.state.highScore}\n          message={this.state.message}\n        />\n\n        <Grid fluid>\n          <Row id=\"message-row\">\n            <Col xs={12}>\n              <h3>Try to click on each character only once to win the game!</h3>\n            </Col>\n          </Row>\n          <Row id=\"pokemon-row\">\n            {this.state.pokemon.map(pokemon => (\n              <Col xs={6} md={3}>\n                <Card\n                  key={pokemon.id}\n                  id={pokemon.id}\n                  image={pokemon.image}\n                  handleClick={this.handleClick}\n                  handleIncrement={this.handleIncrement}\n                  handleReset={this.handleReset}\n                  handleShuffle={this.handleShuffle}\n                />\n              </Col>\n            ))}\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nfunction shufflePokemon(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  };\n  return array;\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}